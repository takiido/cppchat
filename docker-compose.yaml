# Named volumes for persistent data
volumes:
  grafana-data:
    name: ${PROJECT:-cppchat}_grafana_data
  loki-data:
    name: ${PROJECT:-cppchat}_loki_data
  pg-data:
    name: ${PROJECT:-cppchat}_pg_data

# Network configuration
networks:
  cppchat:
    name: ${PROJECT:-cppchat}_network
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: ${PROJECT:-cppchat}_network

# Service definitions
services:
  # Loki logging server
  loki:
    image: grafana/loki:3.5.0
    container_name: ${PROJECT:-cppchat}-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -config.expand-env=true
    volumes:
      - ./docker/loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    networks:
      - cppchat
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    environment:
      - TZ=${TZ:-UTC}

  # Promtail log agent
  promtail:
    image: grafana/promtail:3.5.0
    container_name: ${PROJECT:-cppchat}-promtail
    volumes:
      - ./logs:/var/log/cppchat:ro
      - ./docker/promtail/promtail-config.yaml:/etc/promtail/config.yml:ro
    networks:
      - cppchat
    depends_on:
      loki:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    restart: unless-stopped
    environment:
      - TZ=${TZ:-UTC}
      - USER=${PROMTAIL_USER:-promtail}
      - PSSWD=${PROMTAIL_PSSWD:-}

  # Grafana visualization platform
  grafana:
    image: grafana/grafana-oss:12.0.0
    container_name: ${PROJECT:-cppchat}-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - cppchat
    depends_on:
      loki:
        condition: service_healthy
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_LOG_LEVEL=info
      - TZ=${TZ:-UTC}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: ${PROJECT:-cppchat}-nginx
    ports:
      - "3101:3101"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    networks:
      - cppchat
    depends_on:
      loki:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:15.5-alpine
    container_name: ${PROJECT:-cppchat}-postgres
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - cppchat
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-cppchat_db}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PSSWD}
      - POSTGRES_DB_USER=${CPPCHAT_DB_USER}
      - POSTGRES_DB_PSSWD=${CPPCHAT_DB_PSSWD}
      - TZ=${TZ:-UTC}